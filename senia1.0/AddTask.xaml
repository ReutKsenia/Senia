<UserControl x:Class="senia1._0.AddTask"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:senia1._0"
             mc:Ignorable="d" 
             Width="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Width}" Height="{Binding ElementName=l,Path=Height}" d:DesignWidth="800.459">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources\Dictionary1.xaml"/>

            </ResourceDictionary.MergedDictionaries>
            <ControlTemplate x:Key="ButtonControlTemplate1" TargetType="{x:Type Button}">
                <Grid>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ellipse">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                        <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                        <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                                        <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                                        <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                        <EasingColorKeyFrame KeyTime="0" Value="#FFA584C8"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ellipse">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.947"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="-0.5"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ellipse">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.947"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="ellipse">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed"/>
                            <VisualState x:Name="Disabled"/>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Label x:Name="label" Content="Добавить задачу" HorizontalAlignment="Stretch" Height="38" Margin="43.801,0.667,0,0" VerticalAlignment="Top" Width="Auto" VerticalContentAlignment="Center" FontFamily="DIN Round Pro" FontSize="14" Background="{x:Null}" Foreground="#FF7141A4"/>
                    <Grid HorizontalAlignment="Left" Margin="0,0.667,0,0" VerticalAlignment="Stretch" Width="43.801">
                        <Ellipse x:Name="ellipse" Fill="#FF7141A4" HorizontalAlignment="Left" Height="38" Margin="1.334,0.667,0,-0.667" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Stroke="{x:Null}" StrokeThickness="2" VerticalAlignment="Top" Width="37.467" Visibility="Hidden" RenderTransformOrigin="0.5,0.5">
                            <Ellipse.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <Path x:Name="path" Data="M22.4,10 L22.133333,35.067" Fill="#FF7141A4" HorizontalAlignment="Left" Height="23" Margin="18.394,8.698,0,0" Stretch="Fill" Stroke="#FF7141A4" VerticalAlignment="Top" Width="2" StrokeThickness="2" RenderTransformOrigin="0.5,0.5" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="0.252"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path x:Name="path1" Data="M22.4,10 L22.133333,35.067" Fill="#FF7141A4" HorizontalAlignment="Left" Height="23" Margin="18.725,8.871,0,0" Stretch="Fill" Stroke="#FF7141A4" VerticalAlignment="Top" Width="2" StrokeThickness="2" RenderTransformOrigin="0.5,0.5" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="89.826"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="False"/>
                    <Trigger Property="IsDefault" Value="False"/>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

            <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="5" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF7141A4"/>
                                    <Setter Property="Background" TargetName="border" Value="White"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="White"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF7141A4"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="grid1">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <StackPanel x:Name="stack1" Margin="0,0,0,89.2" Grid.Row="0" Grid.RowSpan="1">
            <ListBox x:Name="l">

            </ListBox>
        </StackPanel>
        <Button x:Name="Add" Content="Button" HorizontalAlignment="Left" Height="38.667" Margin="2.995,0,0,48.099" VerticalAlignment="Bottom" Width="167.4" Background="{x:Null}" BorderBrush="{x:Null}" Template="{DynamicResource ButtonControlTemplate1}" Click="AddTask_Click"/>
        <Grid x:Name="grid2" Visibility="Hidden">
            <Border x:Name="B1"  CornerRadius="12,12,12,12" Background="#FF7141A4" Margin="0,0,-0.2,0" Height="89.2" VerticalAlignment="Bottom">
                <Grid Grid.RowSpan="3" Width="{Binding Width, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" VerticalAlignment="Top" Margin="0" Height="89.2">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="8*"/>
                        <RowDefinition Height="37*"/>
                        <RowDefinition Height="44*"/>
                    </Grid.RowDefinitions>
                    <Border x:Name="B2" Background="White" CornerRadius="8,8,8,8" Margin="21,0,10,5" VerticalAlignment="Bottom" Height="29.236"  Grid.Row="1">
                        <TextBox x:Name="Task1" Margin="13.179,0,0,0" TextWrapping="Wrap" Width="{Binding Width, ElementName=B2}" Foreground="#FF7141A4" FontFamily="DIN Round Pro" FontSize="14" Height="34.236" VerticalAlignment="Bottom" SelectionBrush="{x:Null}" BorderBrush="{x:Null}"/>
                    </Border>
                    <Button x:Name="AddTask1" Content="Добавить задачу" Grid.Column="0" HorizontalAlignment="Left" Height="28.859" Grid.Row="2" VerticalAlignment="Top" Width="155.2" Style="{DynamicResource ButtonStyle1}" Background="White" BorderBrush="{x:Null}" Foreground="#FF7141A4" Click="AddTask1_Click_1" FontFamily="DIN Round Pro" Margin="21,0,0,0" Cursor="Hand"/>
                    <Button x:Name="Abort" Content="Отмена" HorizontalAlignment="Left" VerticalAlignment="Top" Width="84.6" Margin="177,0,0,0" Grid.Row="2" Foreground="White" Height="28.859" Background="{x:Null}" BorderBrush="{x:Null}" Click="Abort_Click_1"/>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</UserControl>
