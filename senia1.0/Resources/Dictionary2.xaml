<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:local="clr-namespace:senia1._0.Resources">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Purple.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type FrameworkElement}}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" To="Expanded">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_Content">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content"/>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" To="Collapsed">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_Content">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_Content">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_Content">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Hidden</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <DockPanel Background="{TemplateBinding Background}" Width="Auto">
                            <ToggleButton x:Name="HeaderSite" BorderThickness="1" Cursor="Hand" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" Focusable="False" FontSize="20" IsTabStop="False" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Opacity="100" BorderBrush="{x:Null}" Height="65">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Background="{TemplateBinding Background}" Padding="{Binding (materialDesign:ExpanderAssist.DownHeaderPadding), RelativeSource={RelativeSource TemplatedParent}}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="81.733,19.62,0,19.62" VerticalAlignment="Center" HorizontalAlignment="Center" Width="195.267"/>
                                                            <ToggleButton Grid.Column="0" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top" BorderBrush="White" Background="White" HorizontalAlignment="Left" Height="65" Width="71.733" Margin="10,0,0,0">
                                                                <ToggleButton.Style>
                                                                    <Style TargetType="{x:Type ToggleButton}">
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                    <Border Background="Transparent">
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CheckStates">
                                                                                                <VisualStateGroup.Transitions>
                                                                                                    <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="-90"/>
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="-90"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-90"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                </VisualStateGroup.Transitions>
                                                                                                <VisualState x:Name="Checked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Unchecked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-90"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                        <materialDesign:PackIcon x:Name="ExpandPath" Foreground="{TemplateBinding Foreground}" Height="30" Kind="ExpandMore" Opacity="0.80" RenderTransformOrigin="0.5,0.5" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                            <materialDesign:PackIcon.RenderTransform>
                                                                                                <TransformGroup>
                                                                                                    <ScaleTransform/>
                                                                                                    <SkewTransform/>
                                                                                                    <RotateTransform/>
                                                                                                    <TranslateTransform/>
                                                                                                </TransformGroup>
                                                                                            </materialDesign:PackIcon.RenderTransform>
                                                                                        </materialDesign:PackIcon>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </ToggleButton.Style>
                                                            </ToggleButton>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Border x:Name="ContentSite" DockPanel.Dock="Bottom" Height="184.788" VerticalAlignment="Top" Margin="47.2,0,0,0">
                                <StackPanel x:Name="ContentPanel" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <StackPanel.Height>
                                        <MultiBinding UpdateSourceTrigger="Default">
                                            <MultiBinding.Converter>
                                                <materialDesign:MathMultipleConverter Operation="Multiply"/>
                                            </MultiBinding.Converter>
                                            <Binding ElementName="PART_Content" Path="ActualHeight"/>
                                            <Binding ElementName="PART_Content" Path="Opacity"/>
                                        </MultiBinding>
                                    </StackPanel.Height>
                                    <StackPanel.Width>
                                        <MultiBinding UpdateSourceTrigger="Default">
                                            <MultiBinding.Converter>
                                                <materialDesign:MathMultipleConverter Operation="Multiply"/>
                                            </MultiBinding.Converter>
                                            <Binding ElementName="PART_Content" Path="ActualWidth"/>
                                            <Binding ElementName="PART_Content" Path="Opacity"/>
                                        </MultiBinding>
                                    </StackPanel.Width>
                                    <ContentPresenter x:Name="PART_Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="35.418,9.52,0.358,9.52" Focusable="False"/>
                                </StackPanel>
                            </Border>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True" SourceName="HeaderSite">
                            <Setter Property="Background" TargetName="HeaderSite">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FF5A3582" Opacity="0.2"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="HeaderSite">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FF8C36C7" Opacity="0.5"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" TargetName="HeaderSite" Value="0"/>
                            <Setter Property="OpacityMask" TargetName="HeaderSite" Value="{x:Null}"/>
                            <Setter Property="BorderThickness" TargetName="HeaderSite" Value="5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="HeaderSite">
                            <Setter Property="Background" TargetName="HeaderSite">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FF5A3582" Opacity="0.2"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="HeaderSite">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FF8C36C7" Opacity="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Right"/>
                            <Setter Property="Orientation" TargetName="ContentPanel" Value="Horizontal"/>
                            <Setter Property="Height" TargetName="ContentPanel" Value="Auto"/>
                            <Setter Property="Style" TargetName="HeaderSite">
                                <Setter.Value>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                        <Setter Property="VerticalAlignment" Value="Stretch"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Background="{TemplateBinding Background}" Padding="{Binding (materialDesign:ExpanderAssist.RightHeaderPadding), RelativeSource={RelativeSource TemplatedParent}}">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>
                                                            <ToggleButton Grid.Column="0" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top" Margin="0,9.52,185.116,6.12" BorderBrush="White" Background="White" HorizontalAlignment="Left">
                                                                <ToggleButton.RenderTransform>
                                                                    <RotateTransform Angle="-90"/>
                                                                </ToggleButton.RenderTransform>
                                                                <ToggleButton.Style>
                                                                    <Style TargetType="{x:Type ToggleButton}">
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                    <Border Background="Transparent">
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CheckStates">
                                                                                                <VisualStateGroup.Transitions>
                                                                                                    <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="-90"/>
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="-90"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-90"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                </VisualStateGroup.Transitions>
                                                                                                <VisualState x:Name="Checked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Unchecked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-90"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                        <materialDesign:PackIcon x:Name="ExpandPath" Foreground="{TemplateBinding Foreground}" Height="30" Kind="ExpandMore" Opacity="0.80" RenderTransformOrigin="0.5,0.5" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                            <materialDesign:PackIcon.RenderTransform>
                                                                                                <TransformGroup>
                                                                                                    <ScaleTransform/>
                                                                                                    <SkewTransform/>
                                                                                                    <RotateTransform/>
                                                                                                    <TranslateTransform/>
                                                                                                </TransformGroup>
                                                                                            </materialDesign:PackIcon.RenderTransform>
                                                                                        </materialDesign:PackIcon>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </ToggleButton.Style>
                                                            </ToggleButton>
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="35.418,9.52,0.358,9.52" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Left"/>
                            <Setter Property="Orientation" TargetName="ContentPanel" Value="Horizontal"/>
                            <Setter Property="Height" TargetName="ContentPanel" Value="Auto"/>
                            <Setter Property="Style" TargetName="HeaderSite">
                                <Setter.Value>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="HorizontalAlignment" Value="Right"/>
                                        <Setter Property="VerticalAlignment" Value="Stretch"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Background="{TemplateBinding Background}" Padding="{Binding (materialDesign:ExpanderAssist.LeftHeaderPadding), RelativeSource={RelativeSource TemplatedParent}}">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>
                                                            <ToggleButton Grid.Column="0" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top" Margin="0,9.52,185.116,6.12" BorderBrush="White" Background="White" HorizontalAlignment="Left">
                                                                <ToggleButton.RenderTransform>
                                                                    <RotateTransform Angle="90"/>
                                                                </ToggleButton.RenderTransform>
                                                                <ToggleButton.Style>
                                                                    <Style TargetType="{x:Type ToggleButton}">
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                    <Border Background="Transparent">
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CheckStates">
                                                                                                <VisualStateGroup.Transitions>
                                                                                                    <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="-90"/>
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="-90"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-90"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                </VisualStateGroup.Transitions>
                                                                                                <VisualState x:Name="Checked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Unchecked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-90"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                        <materialDesign:PackIcon x:Name="ExpandPath" Foreground="{TemplateBinding Foreground}" Height="30" Kind="ExpandMore" Opacity="0.80" RenderTransformOrigin="0.5,0.5" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                            <materialDesign:PackIcon.RenderTransform>
                                                                                                <TransformGroup>
                                                                                                    <ScaleTransform/>
                                                                                                    <SkewTransform/>
                                                                                                    <RotateTransform/>
                                                                                                    <TranslateTransform/>
                                                                                                </TransformGroup>
                                                                                            </materialDesign:PackIcon.RenderTransform>
                                                                                        </materialDesign:PackIcon>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </ToggleButton.Style>
                                                            </ToggleButton>
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="35.418,9.52,0.358,9.52" Grid.Row="1" VerticalAlignment="Center" />
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Top"/>
                            <Setter Property="Orientation" TargetName="ContentPanel" Value="Vertical"/>
                            <Setter Property="Width" TargetName="ContentPanel" Value="Auto"/>
                            <Setter Property="Style" TargetName="HeaderSite">
                                <Setter.Value>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Background="{TemplateBinding Background}" Padding="{Binding (materialDesign:ExpanderAssist.UpHeaderPadding), RelativeSource={RelativeSource TemplatedParent}}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="35.418,9.52,0.358,9.52" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                            <ToggleButton Grid.Column="0" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top" Margin="0,9.52,185.116,6.12" BorderBrush="White" Background="White" HorizontalAlignment="Left">
                                                                <ToggleButton.RenderTransform>
                                                                    <RotateTransform Angle="-180"/>
                                                                </ToggleButton.RenderTransform>
                                                                <ToggleButton.Style>
                                                                    <Style TargetType="{x:Type ToggleButton}">
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                    <Border Background="Transparent">
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CheckStates">
                                                                                                <VisualStateGroup.Transitions>
                                                                                                    <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="-90"/>
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="-90"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-90"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                </VisualStateGroup.Transitions>
                                                                                                <VisualState x:Name="Checked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Unchecked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-90"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                        <materialDesign:PackIcon x:Name="ExpandPath" Foreground="{TemplateBinding Foreground}"  Height="30" Kind="ExpandMore" Opacity="0.80" RenderTransformOrigin="0.5,0.5" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                            <materialDesign:PackIcon.RenderTransform>
                                                                                                <TransformGroup>
                                                                                                    <ScaleTransform/>
                                                                                                    <SkewTransform/>
                                                                                                    <RotateTransform/>
                                                                                                    <TranslateTransform/>
                                                                                                </TransformGroup>
                                                                                            </materialDesign:PackIcon.RenderTransform>
                                                                                        </materialDesign:PackIcon>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </ToggleButton.Style>
                                                            </ToggleButton>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Down">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Bottom"/>
                            <Setter Property="Orientation" TargetName="ContentPanel" Value="Vertical"/>
                            <Setter Property="Width" TargetName="ContentPanel" Value="Auto"/>
                            <Setter Property="Style" TargetName="HeaderSite">
                                <Setter.Value>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Background="{TemplateBinding Background}" Padding="{Binding (materialDesign:ExpanderAssist.DownHeaderPadding), RelativeSource={RelativeSource TemplatedParent}}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="81.733,19.62,0,19.62" VerticalAlignment="Center" HorizontalAlignment="Center" Width="195.267"/>
                                                            <ToggleButton Grid.Column="0" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top" BorderBrush="White" Background="White" HorizontalAlignment="Left" Height="65" Width="71.733" Margin="10,0,0,0">
                                                                <ToggleButton.Style>
                                                                    <Style TargetType="{x:Type ToggleButton}">
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                    <Border Background="Transparent">
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CheckStates">
                                                                                                <VisualStateGroup.Transitions>
                                                                                                    <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="-90"/>
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="-90"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-90"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                </VisualStateGroup.Transitions>
                                                                                                <VisualState x:Name="Checked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Unchecked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-90"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                        <materialDesign:PackIcon x:Name="ExpandPath" Foreground="{TemplateBinding Foreground}" Height="30" Kind="ExpandMore" Opacity="0.80" RenderTransformOrigin="0.5,0.5" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                            <materialDesign:PackIcon.RenderTransform>
                                                                                                <TransformGroup>
                                                                                                    <ScaleTransform/>
                                                                                                    <SkewTransform/>
                                                                                                    <RotateTransform/>
                                                                                                    <TranslateTransform/>
                                                                                                </TransformGroup>
                                                                                            </materialDesign:PackIcon.RenderTransform>
                                                                                        </materialDesign:PackIcon>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </ToggleButton.Style>
                                                            </ToggleButton>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="CheckBox" x:Key="CircleCheckbox">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Content" Value=""></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Ellipse x:Name="outerEllipse">
                            <Ellipse.Fill>
                                <RadialGradientBrush>
                                    <GradientStop Offset="0" Color="Red"/>
                                    <GradientStop Offset="0.88" Color="LightCoral"/>
                                    <GradientStop Offset="1" Color="DarkRed"/>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse Margin="10" x:Name="highlightCircle" >
                            <Ellipse.Fill >
                                <LinearGradientBrush >
                                    <GradientStop Offset="0" Color="Green"/>
                                    <GradientStop Offset="0.5" Color="LightGreen"/>
                                    <GradientStop Offset="1" Color="DarkGreen"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="highlightCircle" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                        <GradientStop Offset="0" Color="Green"/>
                                        <GradientStop Offset="0.5" Color="LightGreen"/>
                                        <GradientStop Offset="1" Color="DarkGreen"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="outerEllipse" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="0" Color="Green"/>
                                        <GradientStop Offset="0.88" Color="LightGreen"/>
                                        <GradientStop Offset="1" Color="DarkGreen"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="highlightCircle" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                        <GradientStop Offset="0" Color="Red"/>
                                        <GradientStop Offset="0.5" Color="LightCoral"/>
                                        <GradientStop Offset="1" Color="DarkRed"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--Scrollbar Thumbs-->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--ScrollBars-->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="#FFBB93E5" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>
                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="8" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>